<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
xmlns:context="http://www.springframework.org/schema/context" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:aop="http://www.springframework.org/schema/aop"  
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xmlns:p="http://www.springframework.org/schema/p" 
    xmlns:util="http://www.springframework.org/schema/util" 
    xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
    xmlns:cache="http://www.springframework.org/schema/cache"  
    xsi:schemaLocation="  
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/jdbc
    http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
    http://www.springframework.org/schema/cache
    http://www.springframework.org/schema/cache/spring-cache-3.1.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd">
    
    
    <context:component-scan base-package="com.test.*">
    	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    
	<context:property-placeholder location = "classpath:jdbc.properties"/>
	
	<bean id = "dataSource" class = "org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}"/>
		<property name = "url" value="${jdbc.url}"/>
		<property name="username" value = "${jdbc.username}"></property>
		<property name="password" value = "${jdbc.password}"/>
		<!-- Connection Pooling DBCP -->  
        <property name="initialSize" value="5" />  
        <property name="maxActive" value="100" />  
        <property name="maxIdle" value="30" />  
        <property name="maxWait" value="1000" />  
        <property name="poolPreparedStatements" value="true" />  
        <property name="defaultAutoCommit" value="false" />  
	</bean>
	
	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 ref引用另一个bean-->  
	<bean id = "sqlSessionFactory" class = "org.mybatis.spring.SqlSessionFactoryBean">
	    <property name="dataSource" ref="dataSource"></property>
	    <property name="mapperLocations" value = "classpath:com/test/mapper/*.xml"/>
	    <property name="configLocation" value = "classpath:mybatis-configuration.xml"/>
	</bean>
    
    <!-- DAO(mapper)接口所在包名，Spring会自动查找其下的类 -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    	<property name = "basePackage" value="com.test.mapper"/>
    	<property name = "sqlSessionFactoryBeanName" value= "sqlSessionFactory"/>
    </bean>
    
    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  
    <bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" /> 
    </bean>   
    
    <!-- 配置事务特性 -->
	<tx:advice id="txAdvice" 
			transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="find*" 
					propagation="NOT_SUPPORTED"
					isolation="READ_COMMITTED"
					read-only="true"
			/>
			<tx:method name="*"
					propagation="REQUIRED"
					isolation="READ_COMMITTED"
			/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<!--把事务控制在Service层-->
	     <aop:pointcut id="pc" expression="execution(* com.test.service..*.*(..))"/>
	     <aop:advisor advice-ref="txAdvice" pointcut-ref="pc"/>
	</aop:config>
    
</beans>